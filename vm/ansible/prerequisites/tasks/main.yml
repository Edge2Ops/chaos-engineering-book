---
- name: Install apt repositories
  become: true
  apt_repository:
    repo: "{{ item }}"
    state: present
  loop: "{{ apt_repositories }}"

- name: Install grafana's key and apt-repo
  shell: |
    sudo apt-get install -y apt-transport-https
    sudo apt-get install -y software-properties-common wget
    wget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -
    sudo add-apt-repository "deb https://packages.grafana.com/oss/deb stable main"

- name: Preinstall packages
  become: true
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  loop: "{{ packages_to_install }}"

- name: Check out the book source code to home
  git:
    repo: 'https://github.com/seeker89/chaos-engineering-in-action.git'
    dest: /home/chaos/src

- name: Make all the examples
  shell: make
  args:
    chdir: /home/chaos/src

- name: Install kind
  shell: |
    curl -Lo ./kind "https://github.com/kubernetes-sigs/kind/releases/download/v0.7.0/kind-$(uname)-amd64"
    chmod +x ./kind
    sudo mv ./kind /usr/bin/kind
    exit 0
  args:
    creates: /usr/bin/kind

- name: Install kubectl
  shell: |
    curl -Lo ./kubectl "https://storage.googleapis.com/kubernetes-release/release/v1.17.0/bin/linux/amd64/kubectl"
    chmod +x ./kubectl
    sudo mv ./kubectl /usr/bin/kubectl
    echo 'source <(kubectl completion bash)' >>~/.bashrc
    echo 'alias k=kubectl' >>~/.bashrc
    echo 'complete -F __start_kubectl k' >>~/.bashrc
    exit 0
  args:
    creates: /usr/bin/kubectl

- name: Install pumba
  shell: |
    curl -Lo ./pumba "https://github.com/alexei-led/pumba/releases/download/0.6.8/pumba_linux_amd64"
    chmod +x ./pumba
    sudo mv ./pumba /usr/bin/pumba
    exit 0
  args:
    creates: /usr/bin/pumba

- name: Allow insecure access to docker socket
  shell: |
    sudo setfacl -m user:$USER:rw /var/run/docker.sock
    sudo usermod -aG docker $USER
    exit 0

- name: Load kind images onto nodes
  shell: |
    kind create cluster
    kind delete cluster
    exit 0

- name: Install pumba
  shell: |
    curl -Lo ./pumba "https://github.com/alexei-led/pumba/releases/download/0.6.8/pumba_linux_amd64"
    chmod +x ./pumba
    sudo mv ./pumba /usr/bin/pumba
    exit 0
  args:
    creates: /usr/bin/pumba

- name: Pre-pull some images into docker
  shell: |
    docker pull {{ item }}
  loop: "{{ docker_images_to_pull }}"

- name: Disable docker starting on boot
  shell: |
    sudo systemctl disable docker
    sudo systemctl stop docker

  # to avoid surprises, always overcommit the memory
- name: Always overcommit the memory
  become: true
  shell: |
    echo 1 > /proc/sys/vm/overcommit_memory

- name: Prebuild python 3.7 from source with dtrace support
  become: make
  shell: |
    # install the dependencies
    sudo apt-get install -y build-essential
    sudo apt-get install -y checkinstall
    sudo apt-get install -y libreadline-gplv2-dev
    sudo apt-get install -y libncursesw5-dev
    sudo apt-get install -y libssl-dev
    sudo apt-get install -y libsqlite3-dev
    sudo apt-get install -y tk-dev
    sudo apt-get install -y libgdbm-dev
    sudo apt-get install -y libc6-dev
    sudo apt-get install -y libbz2-dev
    sudo apt-get install -y zlib1g-dev
    sudo apt-get install -y openssl
    sudo apt-get install -y libffi-dev
    sudo apt-get install -y python3-dev
    sudo apt-get install -y python3-setuptools
    sudo apt-get install -y wget
    # download
    cd ~
    curl -o Python-3.7.0.tgz https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tgz
    tar -xzf Python-3.7.0.tgz
    cd Python-3.7.0
    ./configure --with-dtrace --enable-optimizations
    make
    #make test
    sudo make install
    cd ..
    rm -rf Python-3.7.0 Python-3.7.0.tgz
